#!/bin/bash
############################################################
# Functions                                                #
############################################################
Help()
{
   # Display Help
   echo "Print residuals for wolf solver"
   echo
   echo "Syntax: printResiduals [-A|f|flow|h|turb]"
   echo "options:"
   echo "A		Print all variable residuals."
   echo "f		Print residuals at runtime."
   echo "M		Print mean flow variable residuals."
   echo "T		Print turbulent variable residuals."
   echo "h		Print this Help."
   echo
}

loop () {
	pause 5
	replot
}

plotAll () {
  gnuplot -persist -e "set title 'Residuals';\
  					   set logscale y;\
                       set xlabel 'iter';\
                       set grid;\
                       set format y '%g';\
                       plot 'residual.dat' using 1:3 title 'Density Res.' with lines,\
                            'residual.dat' using 1:4 title 'Velocity-x Res.' with lines,\
                            'residual.dat' using 1:5 title 'Velocity-y Res.' with lines,\
                            'residual.dat' using 1:6 title 'Energy Res.' with lines,\
                            'residual.dat' using 1:7 title 'TKE Res.' with lines,\
                            'residual.dat' using 1:8 title 'Omega Res.' with lines;" loop.plt
}


plotFlow () {
  gnuplot -persist -e "set title 'Mean Flow Residuals';\
  					   set logscale y;\
                       set xlabel 'iter';\
                       set grid;\
                       set format y '%g';\
                       plot 'residual.dat' using 1:3 title 'Density Res.' with lines,\
                            'residual.dat' using 1:4 title 'Velocity-x Res.' with lines,\
                            'residual.dat' using 1:5 title 'Velocity-y Res.' with lines,\
                            'residual.dat' using 1:6 title 'Energy Res.' with lines"
} 

plotTurb () {
  gnuplot -persist -e "set title 'Turbulence Residuals';\
  					   set logscale y;\
                       set xlabel 'iter';\
                       set grid;\
                       set format y '%g';\
                       plot 'residual.dat' using 1:7 title 'TKE Res.' with lines,\
                            'residual.dat' using 1:8 title 'Omega Res.' with lines"
} 

# function to handle interrupt signal
function cleanup {
    echo "Cleaning up..."
    rm -f residual.dat
    # close the gnuplot window
    echo "exit" > /tmp/gnuplot-plotAllR
    exit 0
}

# trap the interrupt signal and execute the cleanup function
trap cleanup SIGINT

############################################################
############################################################
# Main program                                             #
############################################################
############################################################
############################################################
# Process the input options. Add options as needed.        #
############################################################
# Get the options
while getopts "fhATM" option; do
   case $option in
      h) # display Help
           Help
           exit;;
      A) # Plot all residuals
		   # Re-plot all data every 5 seconds if -f option is set
		   if [[ $flag_f == true ]]; then
			   echo "Writing loop plot file"
			   echo "pause 5" > loop.plt
			   echo "replot" >> loop.plt
			   while true; 
			   do
			   	  plotAll
			   done
		   fi
		   plotAll
		   ;;
      T) # Plot all residuals
	  	   plotTurb
		   ;;
      M) # Plot all residuals
           plotFlow
		   ;;
	  f) # print runtime
		   flag_f=true
		   ;;
     \?) # Invalid option
         echo "Error: Invalid option"
         exit;;
   esac
done
